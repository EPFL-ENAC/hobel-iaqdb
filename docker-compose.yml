services:
  reverse-proxy:
    image: traefik:v2.10
    command:
      - "--accesslog=true"
      - "--providers.docker"
      - "--providers.file.directory=/configuration/"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
  frontend:
    build:
      context: ./frontend
      args:
        - API_URL=${API_URL}
        - API_PATH=/api
    expose:
      - 80
    ports:
      - '8080:80'
    labels:
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "traefik.http.routers.frontend.middlewares=frontend-middleware"
      - "traefik.http.middlewares.frontend-middleware.stripprefix.prefixes=/"
    restart: unless-stopped
  backend:
    build: ./backend
    environment:
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PREFIX=${DB_PREFIX}
      - API_KEYS=${API_KEYS}
      - PATH_PREFIX=/api
      - S3_ENDPOINT_HOSTNAME=${S3_ENDPOINT_HOSTNAME}
      - S3_ENDPOINT_PROTOCOL=${S3_ENDPOINT_PROTOCOL}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - S3_REGION=${S3_REGION}
      - S3_BUCKET=${S3_BUCKET}
      - S3_PATH_PREFIX=${S3_PATH_PREFIX}
    expose:
      - 8000
    ports:
      - '8000:8000'
    labels:
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
      - "traefik.http.routers.backend.middlewares=backend-middleware"
      - "traefik.http.middlewares.backend-middleware.stripprefix.prefixes=/api"
    restart: unless-stopped
    links:
      - postgres
  postgres:
    image: postgres:15.5-alpine
    expose:
      - 5432
    ports:
      - '5432:5432'
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_HOST=postgres
volumes:
  postgres:
    driver: local
