"""various_updates

Revision ID: 1edb7ed84236
Revises: 7b0ba8104864
Create Date: 2025-03-20 15:57:11.590622

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '1edb7ed84236'
down_revision: Union[str, None] = '7b0ba8104864'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('building', sa.Column('particle_filtration_system',
                  sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('building', sa.Column(
        'airtightness', sa.Float(), nullable=True))
    op.alter_column('building', 'country',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.alter_column('building', 'city',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.alter_column('building', 'altitude',
                    existing_type=sa.DOUBLE_PRECISION(precision=53),
                    type_=sa.Integer(),
                    existing_nullable=True)
    op.alter_column('building', 'renovation',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.alter_column('building', 'mechanical_ventilation',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.alter_column('building', 'operable_windows',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.alter_column('building', 'smoking',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.drop_index('ix_building_identifier', table_name='building')
    op.drop_index('ix_building_study_id', table_name='building')
    op.create_index(op.f('ix_building_id'), 'building', ['id'], unique=False)
    op.create_unique_constraint(None, 'building', ['id'])
    op.drop_constraint('building_study_id_fkey',
                       'building', type_='foreignkey')
    op.create_foreign_key(None, 'building', 'study', [
                          'study_id'], ['id'], ondelete='CASCADE')
    op.drop_column('building', 'other_special_population')
    op.alter_column('certification', 'level',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.drop_index('ix_certification_building_id', table_name='certification')
    op.create_index(op.f('ix_certification_id'),
                    'certification', ['id'], unique=False)
    op.create_unique_constraint(None, 'certification', ['id'])
    op.drop_constraint('certification_building_id_fkey',
                       'certification', type_='foreignkey')
    op.create_foreign_key(None, 'certification', 'building', [
                          'building_id'], ['id'], ondelete='CASCADE')
    op.drop_index('ix_dataset_study_id', table_name='dataset')
    op.create_index(op.f('ix_dataset_id'), 'dataset', ['id'], unique=False)
    op.create_unique_constraint(None, 'dataset', ['id'])
    op.drop_constraint('dataset_study_id_fkey', 'dataset', type_='foreignkey')
    op.create_foreign_key(None, 'dataset', 'study', [
                          'study_id'], ['id'], ondelete='CASCADE')
    op.drop_index('ix_instrument_identifier', table_name='instrument')
    op.drop_index('ix_instrument_study_id', table_name='instrument')
    op.create_index(op.f('ix_instrument_id'),
                    'instrument', ['id'], unique=False)
    op.create_unique_constraint(None, 'instrument', ['id'])
    op.drop_constraint('instrument_study_id_fkey',
                       'instrument', type_='foreignkey')
    op.create_foreign_key(None, 'instrument', 'study', [
                          'study_id'], ['id'], ondelete='CASCADE')
    op.drop_index('ix_instrumentparameter_instrument_id',
                  table_name='instrumentparameter')
    op.drop_index('ix_instrumentparameter_study_id',
                  table_name='instrumentparameter')
    op.create_index(op.f('ix_instrumentparameter_id'),
                    'instrumentparameter', ['id'], unique=False)
    op.create_unique_constraint(None, 'instrumentparameter', ['id'])
    op.drop_constraint('instrumentparameter_study_id_fkey',
                       'instrumentparameter', type_='foreignkey')
    op.drop_constraint('instrumentparameter_instrument_id_fkey',
                       'instrumentparameter', type_='foreignkey')
    op.create_foreign_key(None, 'instrumentparameter', 'instrument', [
                          'instrument_id'], ['id'], ondelete='CASCADE')
    op.drop_column('instrumentparameter', 'study_id')
    op.alter_column('person', 'email',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.alter_column('person', 'institution',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.drop_index('ix_person_email', table_name='person')
    op.drop_index('ix_person_study_id', table_name='person')
    op.create_index(op.f('ix_person_id'), 'person', ['id'], unique=False)
    op.create_unique_constraint(None, 'person', ['id'])
    op.drop_constraint('person_study_id_fkey', 'person', type_='foreignkey')
    op.create_foreign_key(None, 'person', 'study', [
                          'study_id'], ['id'], ondelete='CASCADE')
    op.add_column('space', sa.Column(
        'occupancy_density', sa.Float(), nullable=True))
    op.add_column('space', sa.Column('other_mechanical_ventilation_type',
                  sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.alter_column('space', 'type',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.drop_index('ix_space_building_id', table_name='space')
    op.drop_index('ix_space_identifier', table_name='space')
    op.drop_index('ix_space_study_id', table_name='space')
    op.create_index(op.f('ix_space_id'), 'space', ['id'], unique=False)
    op.create_unique_constraint(None, 'space', ['id'])
    op.drop_constraint('space_study_id_fkey', 'space', type_='foreignkey')
    op.drop_constraint('space_building_id_fkey', 'space', type_='foreignkey')
    op.create_foreign_key(None, 'space', 'building', [
                          'building_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'space', 'study', ['study_id'], [
                          'id'], ondelete='CASCADE')
    op.drop_column('space', 'mechanical_ventilation_status')
    op.drop_column('space', 'cooling_status')
    op.drop_column('space', 'heating_status')
    op.drop_column('space', 'ventilation_rate')
    op.drop_column('space', 'windows_status')
    op.drop_column('space', 'occupant_density')
    op.drop_column('space', 'air_change_rate')
    op.alter_column('study', 'name',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.alter_column('study', 'description',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.drop_index('ix_study_identifier', table_name='study')
    op.create_index(op.f('ix_study_id'), 'study', ['id'], unique=False)
    op.create_unique_constraint(None, 'study', ['id'])
    op.drop_index('ix_variable_dataset_id', table_name='variable')
    op.drop_index('ix_variable_name', table_name='variable')
    op.drop_index('ix_variable_study_id', table_name='variable')
    op.create_index(op.f('ix_variable_id'), 'variable', ['id'], unique=False)
    op.create_unique_constraint(None, 'variable', ['id'])
    op.drop_constraint('variable_study_id_fkey',
                       'variable', type_='foreignkey')
    op.drop_constraint('variable_dataset_id_fkey',
                       'variable', type_='foreignkey')
    op.create_foreign_key(None, 'variable', 'dataset', [
                          'dataset_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'variable', 'study', [
                          'study_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'variable', type_='foreignkey')
    op.drop_constraint(None, 'variable', type_='foreignkey')
    op.create_foreign_key('variable_dataset_id_fkey',
                          'variable', 'dataset', ['dataset_id'], ['id'])
    op.create_foreign_key('variable_study_id_fkey',
                          'variable', 'study', ['study_id'], ['id'])
    op.drop_constraint(None, 'variable', type_='unique')
    op.drop_index(op.f('ix_variable_id'), table_name='variable')
    op.create_index('ix_variable_study_id', 'variable',
                    ['study_id'], unique=False)
    op.create_index('ix_variable_name', 'variable', ['name'], unique=False)
    op.create_index('ix_variable_dataset_id', 'variable',
                    ['dataset_id'], unique=False)
    op.drop_constraint(None, 'study', type_='unique')
    op.drop_index(op.f('ix_study_id'), table_name='study')
    op.create_index('ix_study_identifier', 'study',
                    ['identifier'], unique=False)
    op.alter_column('study', 'description',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.alter_column('study', 'name',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.add_column('space', sa.Column('air_change_rate', sa.DOUBLE_PRECISION(
        precision=53), autoincrement=False, nullable=True))
    op.add_column('space', sa.Column('occupant_density', sa.DOUBLE_PRECISION(
        precision=53), autoincrement=False, nullable=True))
    op.add_column('space', sa.Column('windows_status',
                  sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('space', sa.Column('ventilation_rate', sa.DOUBLE_PRECISION(
        precision=53), autoincrement=False, nullable=True))
    op.add_column('space', sa.Column('heating_status',
                  sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('space', sa.Column('cooling_status',
                  sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('space', sa.Column('mechanical_ventilation_status',
                  sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'space', type_='foreignkey')
    op.drop_constraint(None, 'space', type_='foreignkey')
    op.create_foreign_key('space_building_id_fkey', 'space',
                          'building', ['building_id'], ['id'])
    op.create_foreign_key('space_study_id_fkey', 'space',
                          'study', ['study_id'], ['id'])
    op.drop_constraint(None, 'space', type_='unique')
    op.drop_index(op.f('ix_space_id'), table_name='space')
    op.create_index('ix_space_study_id', 'space', ['study_id'], unique=False)
    op.create_index('ix_space_identifier', 'space',
                    ['identifier'], unique=False)
    op.create_index('ix_space_building_id', 'space',
                    ['building_id'], unique=False)
    op.alter_column('space', 'type',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.drop_column('space', 'other_mechanical_ventilation_type')
    op.drop_column('space', 'occupancy_density')
    op.drop_constraint(None, 'person', type_='foreignkey')
    op.create_foreign_key('person_study_id_fkey', 'person',
                          'study', ['study_id'], ['id'])
    op.drop_constraint(None, 'person', type_='unique')
    op.drop_index(op.f('ix_person_id'), table_name='person')
    op.create_index('ix_person_study_id', 'person', ['study_id'], unique=False)
    op.create_index('ix_person_email', 'person', ['email'], unique=True)
    op.alter_column('person', 'institution',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.alter_column('person', 'email',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.add_column('instrumentparameter', sa.Column(
        'study_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'instrumentparameter', type_='foreignkey')
    op.create_foreign_key('instrumentparameter_instrument_id_fkey',
                          'instrumentparameter', 'instrument', ['instrument_id'], ['id'])
    op.create_foreign_key('instrumentparameter_study_id_fkey',
                          'instrumentparameter', 'study', ['study_id'], ['id'])
    op.drop_constraint(None, 'instrumentparameter', type_='unique')
    op.drop_index(op.f('ix_instrumentparameter_id'),
                  table_name='instrumentparameter')
    op.create_index('ix_instrumentparameter_study_id',
                    'instrumentparameter', ['study_id'], unique=False)
    op.create_index('ix_instrumentparameter_instrument_id',
                    'instrumentparameter', ['instrument_id'], unique=False)
    op.drop_constraint(None, 'instrument', type_='foreignkey')
    op.create_foreign_key('instrument_study_id_fkey',
                          'instrument', 'study', ['study_id'], ['id'])
    op.drop_constraint(None, 'instrument', type_='unique')
    op.drop_index(op.f('ix_instrument_id'), table_name='instrument')
    op.create_index('ix_instrument_study_id', 'instrument',
                    ['study_id'], unique=False)
    op.create_index('ix_instrument_identifier', 'instrument',
                    ['identifier'], unique=False)
    op.drop_constraint(None, 'dataset', type_='foreignkey')
    op.create_foreign_key('dataset_study_id_fkey',
                          'dataset', 'study', ['study_id'], ['id'])
    op.drop_constraint(None, 'dataset', type_='unique')
    op.drop_index(op.f('ix_dataset_id'), table_name='dataset')
    op.create_index('ix_dataset_study_id', 'dataset',
                    ['study_id'], unique=False)
    op.drop_constraint(None, 'certification', type_='foreignkey')
    op.create_foreign_key('certification_building_id_fkey',
                          'certification', 'building', ['building_id'], ['id'])
    op.drop_constraint(None, 'certification', type_='unique')
    op.drop_index(op.f('ix_certification_id'), table_name='certification')
    op.create_index('ix_certification_building_id',
                    'certification', ['building_id'], unique=False)
    op.alter_column('certification', 'level',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.add_column('building', sa.Column('other_special_population',
                  sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'building', type_='foreignkey')
    op.create_foreign_key('building_study_id_fkey',
                          'building', 'study', ['study_id'], ['id'])
    op.drop_constraint(None, 'building', type_='unique')
    op.drop_index(op.f('ix_building_id'), table_name='building')
    op.create_index('ix_building_study_id', 'building',
                    ['study_id'], unique=False)
    op.create_index('ix_building_identifier', 'building',
                    ['identifier'], unique=False)
    op.alter_column('building', 'smoking',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.alter_column('building', 'operable_windows',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.alter_column('building', 'mechanical_ventilation',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.alter_column('building', 'renovation',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.alter_column('building', 'altitude',
                    existing_type=sa.Integer(),
                    type_=sa.DOUBLE_PRECISION(precision=53),
                    existing_nullable=True)
    op.alter_column('building', 'city',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.alter_column('building', 'country',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.drop_column('building', 'airtightness')
    op.drop_column('building', 'particle_filtration_system')
    # ### end Alembic commands ###
